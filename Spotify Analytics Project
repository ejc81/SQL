-- For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL.

-- Creating the table 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then I inserted the Spotify Data .csv into the table 

-- Next, I explored the data using the following SQL 

SELECT * FROM BIT_DB.Spotifydata;

-- What is the average popularity, dancebility, and energy of the songs 

SELECT AVG(popularity), AVG(danceability), AVG(energy) FROM BIT_DB.Spotifydata;
    
-- What are the top ten tracks based on popularity? 

SELECT track_name, artist_name, popularity FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC LIMIT 10;

-- What artist released the longest song?

SELECT artist_name, track_name, duration_ms FROM BIT_DB.Spotifydata
    ORDER BY duration_ms DESC LIMIT 1;

-- Which artists have more than one song in the top 50? How many songs do they have in the top 50? 

SELECT COUNT(artist_name), artist_name FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    HAVING COUNT(artist_name) >= 2;
    
-- What are the song titles for all the songs by the artists who have more than one song in the top 50? 
    
SELECT artist_name, track_name FROM BIT_DB.Spotifydata
    WHERE artist_name IN (SELECT artist_name FROM BIT_DB.Spotifydata GROUP BY artist_name HAVING COUNT(artist_name) >= 2);

-- -- Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a "Top Star"

WITH avg_popularity_CTE AS (SELECT Spotifydata.artist_name, AVG(Spotifydata.popularity) AS avg_popularity FROM Spotifydata GROUP BY Spotifydata.artist_name) 

SELECT artist_name, avg_popularity, "Top Star" AS tag FROM avg_popularity_CTE
    WHERE avg_popularity >= 90;
